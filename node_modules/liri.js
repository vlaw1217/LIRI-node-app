let moment = require("moment");
    moment.locale('cs');
const Spotify = require("node-spotify-api");
let keys = require("./keys.js");
//console.log(keys)
let fs = require("fs");
let spotify = new Spotify(keys.spotify);
//console.log(spotify)

let liriInput = process.argv[2];
//console.log(liriInput)
let input = process.argv.slice(3).join(" ");
//console.log(input)

// Case to determine which type of search
        switch (liriInput) {
            case "song-this":
                songThis(input);
                break;
            case "movie-this":
                movieThis(input);
                break;
            case "concert-this":
                concertThis(input);
                break;
            case "do-what-it-says":
                doWhatItSays(input);
                break;
            default:
                console.log
                    (`-----------------------------------------
        Please type below one first then search
        1. song-this
        2. movie-this
        3. concert-this
        4. do-what-it-says
-----------------------------------------`);
        }
    
        //End type search          

        //----------------Spotify----------------//

        //Start for song Search
        function songThis() {
            spotify.search({ type: "track", limit: 1, query: input })
                .then(function (response) {
                    let output = response.tracks.items[0];
                    let dataOutput =
                        `Artists(s): ${output.artists[0].name}
            Album Name: ${output.album.name}
            Album Type: ${output.album.album_type}
            Song Name: ${output.name}
            Total Track: ${output.track_number}
            Release Date: ${moment(output.album.release_date).format('MM/DD/YYYY')}`
                    console.log("===================================================================")
                    console.log(dataOutput)

                })
                .catch(function (err) {
                    console.log("Error", err.message);
                });
        }
        // End for song Search

        //STart for movie search
        function movieThis() {
            const axios = require("axios");
            let keys = require("./keys");

            omdbKey = keys.omdbApi.OMDbAPIkey;
//When user type a move in 
            let movieName = process.argv.slice(3).join(" ");
//Default output data if user doesn't type a movie in
            if (process.argv[3] === undefined) {
                movieName = "Mr.+Nobody"
            } 
            
                axios.get("http://www.omdbapi.com/?apikey=" + omdbKey + "&t=" + movieName + "&r&s")

                    .then(function (response) {
                        let outputOmdb = response.data
                        let dataOutputOmdb =
                            `Movie Name: ${outputOmdb.Title}
            Genre: ${outputOmdb.Genre}
            Released: ${moment(outputOmdb.Released).format('MM/DD/YYYY')}
            Actors: ${outputOmdb.Actors}
            Rating: ${outputOmdb.Ratings[1].Value}
            Runtime: ${outputOmdb.Runtime}
            Language: ${outputOmdb.Language}
            Plot: ${outputOmdb.Plot}`
                        console.log("===================================================================")
                        console.log(dataOutputOmdb);
                        console.log("===================================================================")
                    })
                    .catch(function (err) {
                        console.log("Error", err.message)
                    });
            }
        

        //end for movie search

        //start concert search
        function concertThis() {
            const axios = require("axios");
            let artist = process.argv.slice(3).join(" ");

            axios.get("https://rest.bandsintown.com/artists/" + artist + "/events?app_id=codingbootcamp")


                .then(function (response) {
                    let bandsInTown = response.data[0]
                    let bandsInTownOutput =
                        `Venue Name: ${bandsInTown.venue.name}
            Country: ${bandsInTown.venue.country}
            City: ${bandsInTown.venue.city}
            Lineup: ${bandsInTown.lineup}
            Date: ${moment(bandsInTown.datetime).format('MM/DD/YYYY')}`

                    console.log("===================================================================")
                    console.log(bandsInTownOutput);
                    console.log("===================================================================")
                })
                .catch(function (err) {
                    console.log("Error", err.message)
                });
        }
        
        //----------do-what-it-says------------ 

function doWhatItSays() {
    //let randomTxt = "random.txt"
    fs.readFile(random.txt, "utf8", function (err, data) {
        if (err) {
            return console.log(err);
        }
        // console.log(data);
        let dataShow = data.split(",");
        // let inputDoWhatItSays = process.argv.slice(3).join(" ");
        console.log(dataShow);
    })
    
}
